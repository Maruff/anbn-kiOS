#!/usr/bin/env bash
# anbn-kiOS generation script
# Helper script that runs in a Raspbian/others chroot to create the anbn-kiOS distro
# Written by Guy Sheffer <guysoft at gmail dot com>
# GPL V3
########
set -x
set -e

source /common.sh

unpack /filesystem/home/anbn /home/anbn anbn
unpack /filesystem/boot /boot
unpack /filesystem/root_init /

apt-get update

# Display a custom Splashscreen when booting the Rpi
if [ "$ANBN_KIOS_CUSTOM_SPLASHSCREEN" == "yes" ]
then
    apt-get install -y fbi
    sed -i 's/$/ logo.nologo consoleblank=0 loglevel=0 quiet/' /boot/cmdline.txt
    echo "disable_splash=1" >> /boot/config.txt
    systemctl enable splashscreen.service
    systemctl disable getty@tty1
fi

remove_extra=$(remove_if_installed scratch squeak-plugins-scratch squeak-vm python-minecraftpi minecraft-pi sonic-pi oracle-java8-jdk bluej greenfoot libreoffice-common libreoffice-core freepats)

apt-get remove -y --purge  $remove_extra

apt-get autoremove -y

#apt-get tools
apt-get -y --force-yes install python2.7 git screen checkinstall avahi-daemon libavahi-compat-libdnssd1 xterm xdotool vim expect

if [ "$ANBN_KIOS_INCLUDE_CHROMIUM" == "yes" ]
then
    apt-get install -y --force-yes chromium-browser
    sudo -u anbn sed -i 's@%BROWSER_START_SCRIPT%@/home/anbn/scripts/start_chromium_browser@g' /home/anbn/scripts/run_onepageos
fi

#Install web stack
if [ "$ANBN_KIOS_INCLUDE_LIGHTTPD" == "yes" ]
then
    apt-get install -y lighttpd php-common php-cgi php
    lighty-enable-mod fastcgi-php
    #service lighttpd force-reload
    chown -R www-data:www-data /var/www/html
    chmod 775 /var/www/html
    usermod -a -G www-data anbn
    systemctl enable clear_lighttpd_cache.service
    pushd /var/www/html
        #Put git clones in place
        if [ "$ANBN_KIOS_INCLUDE_DASHBOARD" == "yes" ]
        then
        gitclone ANBN_KIOS_DASHBOARD_REPO FullPageDashboard
            chown -R anbn:anbn FullPageDashboard
            chown -R www-data:www-data FullPageDashboard
            chmod 775 FullPageDashboard
            pushd FullPageDashboard
                sed -i "s@'INIT_URL_PATH', __DIR__ . '/init.txt'@'INIT_URL_PATH', '/boot/fullpagedashboard.txt'@g" config.php
            popd
        fi
        #Set Welcome screen
        if [ "$ANBN_KIOS_INCLUDE_WELCOME" == "yes" ]
        then        
            gitclone ANBN_KIOS_WELCOME_REPO welcome
            chown -R www-data:www-data welcome
        fi
    popd
    
    echo "enabled" > /boot/check_for_httpd
else
    echo "disabled" > /boot/check_for_httpd
fi


#override timezone
if [ "$ANBN_KIOS_OVERRIDE_TIMEZONE" != "default" ]
then
    ln -fs /usr/share/zoneinfo/"$ANBN_KIOS_OVERRIDE_TIMEZONE" /etc/localtime
    dpkg-reconfigure -f noninteractive tzdata
fi

#override locale
if [ "$ANBN_KIOS_OVERRIDE_LOCALE" != "default" ]
then
    sed -i '/^#.* '"$ANBN_KIOS_OVERRIDE_LOCALE"' /s/^# //' /etc/locale.gen
    locale-gen
    update-locale LANG="$ANBN_KIOS_OVERRIDE_LOCALE"
fi

#override keyboard model and layout
if [ "$ANBN_KIOS_OVERRIDE_KBD_MODEL" != "default" ]
then
    sed -i 's/^XKBMODEL=.*/XKBMODEL="'$ANBN_KIOS_OVERRIDE_KBD_MODEL'"/' /etc/default/keyboard
fi
if [ "$ANBN_KIOS_OVERRIDE_KBD_LAYOUT" != "default" ]
then
    sed -i 's/^XKBLAYOUT=.*/XKBLAYOUT="'$ANBN_KIOS_OVERRIDE_KBD_LAYOUT'"/' /etc/default/keyboard
fi
if [ "$ANBN_KIOS_OVERRIDE_KBD_MODEL" != "default" ] || [ "$ANBN_KIOS_OVERRIDE_KBD_LAYOUT" != "default" ]
then
    setupcon -k --save-only
fi

# Add emoji support
sudo -u anbn mkdir -p /home/anbn/.fonts
sudo -u anbn wget --directory-prefix /home/anbn/.fonts https://github.com/googlefonts/noto-emoji/raw/main/fonts/NotoColorEmoji.ttf

#override password
if [ "$ANBN_KIOS_OVERRIDE_PASSWORD" != "default" ]
then
    #root password
    echo "anbn:$ANBN_KIOS_OVERRIDE_PASSWORD" | chpasswd
fi

#Setup x11vnc
if [ "$ANBN_KIOS_INCLUDE_X11VNC"  == "yes" ]
then
    apt-get install -y --force-yes x11vnc

    # Set x11vnc password
    if [ "$ANBN_KIOS_OVERRIDE_PASSWORD" != "default" ]
    then
        sudo -u anbn /home/anbn/scripts/setX11vncPass "$ANBN_KIOS_OVERRIDE_PASSWORD"
        if [ ! -f /home/anbn/.vnc/passwd ] || [ ! -s /home/anbn/.vnc/passwd ]; then
          echo "/home/anbn/.vnc/passwd was not created. Trying again."
          sudo -u anbn /home/anbn/scripts/setX11vncPass "$ANBN_KIOS_OVERRIDE_PASSWORD"
          if [ ! -f /home/anbn/.vnc/passwd ] || [ ! -s /home/anbn/.vnc/passwd ]; then
            echo "/home/anbn/.vnc/passwd was not created again. Giving up."
            echo "Failed to set a VNC password. Aborting build."
            exit 1
           fi
        fi
    else
        sudo -u anbn /home/anbn/scripts/setX11vncPass raspberry
        if [ ! -f /home/anbn/.vnc/passwd ] || [ ! -s /home/anbn/.vnc/passwd ]; then
          echo "/home/anbn/.vnc/passwd was not created. Trying again."
          sudo -u anbn /home/anbn/scripts/setX11vncPass raspberry
          if [ ! -f /home/anbn/.vnc/passwd ] || [ ! -s /home/anbn/.vnc/passwd ]; then
            echo "/home/anbn/.vnc/passwd was not created again. Giving up."
            echo "Failed to set a VNC password. Aborting build."
            exit 1
          fi
        fi
    fi
    ls -l /home/anbn/.vnc/passwd

    #Enable x11vnc service
    systemctl enable x11vnc.service
fi

#echo "sudo -u anbn startx /home/anbn/scripts/run_onepageos &" >> /etc/rc.local
#echo "(sleep 15 ; sudo -u anbn /home/anbn/scripts/fullscreen) &" >> /etc/rc.local

#####################################################################
### setup services

echo "server time.nist.gov" >> /etc/ntp.conf
echo "server ntp.ubuntu.com" >> /etc/ntp.conf

#cleanup
apt-get clean
apt-get autoremove -y
